#
#   Library functions
#
#   This is a code generator built using the iMatix GSL code generation
#   language. See https://github.com/imatix/gsl for details.
#
#   Copyright (c) the Contributors as noted in the AUTHORS file.
#
#   This Source Code Form is subject to the terms of the Mozilla Public
#   License, v. 2.0. If a copy of the MPL was not distributed with this
#   file, You can obtain one at http://mozilla.org/MPL/2.0/.

function set_fs_defaults ()
    resolve_fs_types ()

    class.signature ?= 0    
    class.source_dir ?= "."
    class.test_dir ?= "."
    class.module ?= "ZProto"
    class.test_module ?= "ZProto.Tests"    

    class.export_macro ?= ""
    if class.export_macro <> ""
        class.export_macro += " "
    endif

    for message
        message.name = "$(message.name:lower)"        
        message.name = "$(message.name:Pascal)"
        for field
            field.var_name = "$(field.name:camel)"
            field.name = "$(field.name:camel)"
            if type = "number"
                field.size ?= 1
                if size = 1
                    field.fstype = "byte"
                    field.literal = "uy"
                elsif size = 2
                    field.fstype = "uint16"
                    field.literal = "us"
                elsif size = 4
                    field.fstype = "uint32"
                    field.literal = "ul"
                elsif size = 8
                    field.fstype = "uint64"
                    field.literal = "UL"
                else
                    echo "E: bad size $(size) for $(name)"
                endif
            endif
            for class.field as cfield where cfield.name = field.name
                if cfield.type <> field.type
                    echo "E: field '$(name)' must have same type everywhere"
                endif
            else
                copy field to class
            endfor
        endfor
    endfor
endfunction

function resolve_fs_types ()
    for class.message
        for field as original_field
            for class.type where type.name = original_field.type
                for type.field as type_field
                    new field before original_field
                        field.name = original_field.name + " " + type_field.name
                        field.type = type_field.type
                        field.size = type_field.size? 0
                        field. = type_field.?''
                    endnew
                endfor
                delete original_field
            endfor
        endfor
    endfor
endfunction
